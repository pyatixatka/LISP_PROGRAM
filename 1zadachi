;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;

;;; Задание №15
;;; Зинченко В.Д.
;;; Скалярное произведение векторов

(defun произв (x y)
  (cond ((and (null x) (null y)) 0)
        ((or (null x) (null y)) (print "список не равен") 0)
(t (+ (* (car x) (car y)) (произв (cdr x) (cdr y))))))

;;;
;;; (произв '(1 2 3) '(1 2 3))
;;; 14
;;; (произв '(1 2 3 4 5) '(1 2 3))
;;; список не равен
;;; (произв '(1 2 3) '(1 2 3 4 5))
;;; список не равен
 
;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;
 
;;; Задание №2
;;; Зинченко В.Д.
;;; Найти последний элемент списка

(deFun посл(lst)
  (cond ((null (cdr lst)) (car lst))
  (t (посл (cdr lst)))))

;;;
;;; (посл '(1 2 3))
;;; 3
;;; (посл '(1 2 3 4 5 6 7))
;;; 7

;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;
 
;;; Задание №47
;;; Зинченко В.Д.
;;; Определить функцию, которая удаляет все свойства символа.
;;;
(defun Добавить_свойства (lst)
  (cond ( (setf (get lst 'Вес) '(2 kg))
          (setf (get lst 'Модель) '(K55VD))
          (setf (get lst 'Фирма) '(Asus))
          (setf (get lst 'Тип) '(Игровой))
          (setf (get lst 'Год) '(2016))
          (symbol-plist lst))))

(defun Очистить_все (lst)
((lambda (x)
  (cond ((null lst) nil)
        ((remprop lst x) (Очистить_все lst)))) (car (symbol-plist lst))))

(defun Свойства (lst)
((lambda (x)
  (cond ((null lst) nil)
        (x))) (symbol-plist lst)))
;;;
(Добавить_свойства 'ноутбук)
;;; (Год (2016) Тип (Игровой) Фирма (ASUS) Модель (K55VD) Вес (2 KG))
(Свойства 'ноутбук)
;;; (Год (2016) Тип (Игровой) Фирма (ASUS) Модель (K55VD) Вес (2 KG))
(Очистить_все 'ноутбук)
;;; NIL
;;; (Свойства 'ноутбук)
;;; NIL

;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;

;;; Задание №9
;;; Зинченко В.Д.
;;; Разбить список на два списка: 1-нечетные числа, 2 - четные числа.
;;;

(defun чет/нечет (lst)
	(cond 
		((null lst) nil)
        ((null (cdr lst)) (list lst))
		(t
			((lambda (pr)
				(list
	                (cons (car lst) (car pr))
	                (cons (cadr lst) (cadr pr))))
			(чет/нечет (cddr lst))))))

;;;
;;; (чет/нечет '(1 2 3 4 5))
;;; ((1 3 5) (2 4))
;;; (чет/нечет '(1 2 3 4 5 6))
;;; ((1 3 5)(2 4 6))

;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;

;;; Задание №26
;;; Зинченко В.Д.
;;; Определите функцию, разбивающую список (a b c d ...) на пары ((a b) (c d) ...).

(defun пары (lst)
	(cond
		((null (cdr lst)) lst)
		(t (cons(list (car lst) (cadr lst)) (пары (cddr lst))))))

;;;
;;; (пары '(a b c d e f g h))
;;; ((A B) (C D) (E F) (G H))
;;; (пары '(1 2 3 4 5))
;;; ((1 2) (3 4) 5)

;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;


